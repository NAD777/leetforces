version: "3.9"

services:

  postgres:
    image: postgres
    networks:
      - bot_backend
    environment:
      POSTGRES_DB: "backbase"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "8081:5432"

  juggler:
    build:
      context: ./juggler
      dockerfile: ./Dockerfile
    networks:
      - orchestrator_backend
      - bot_backend
    command: python -u -m flask run -h 0.0.0.0 -p 5001
    depends_on:
      - postgres
      - orchestrator
    ports:
      - "5001:5001"
    restart: unless-stopped
    environment:
      - ORCHESTRATOR=http://orchestrator:5000
      - BOT=http://bot:8081
      - PASSWORD=postgres

  orchestrator:
    build:
      context: .
      dockerfile: ./orchestrator/orchestrator.Dockerfile
    networks:
      - internal_net
      - orchestrator_backend
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    command: python -u -m flask run -h 0.0.0.0 -p 5000
    environment:
      - JUGGLER=http://juggler:5001
      - PROJECT_NAME=leetforces
      - DEBUG=False
      - NET_NAME=internal_net
    restart: unless-stopped

  flutter:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    command: /root/.pub-cache/bin/dhttpd --host=0.0.0.0
    ports:
      - "8080:8080"
    networks:
      - bot_backend

networks:
  internal_net:
  bot_backend:
    driver: bridge
  orchestrator_backend:
